from itertools import permutations
import re
def cal(a,b,op):
    result = 0
    if op=='*':
        result = a*b
    elif op=='-':
        result = a-b
    else:
        result = a+b
    return result
def solution(expression):
    regexp = re.compile('[*+-]')
    regexp2 = re.compile('[0-9]+')
    result = []
    operands = list(map(int,regexp2.findall(expression)))
    priorities = list(set(regexp.findall(expression)))
    operators = regexp.findall(expression)
    string = []
    while operands:
        if operators:
            string.append(operands.pop(0))
            string.append(operators.pop(0))
        else:
            string.append(operands.pop())
    for prio in permutations(priorities):
        s = string[:]
        for p in prio:
            while p in s:
                idx = s.index(p)
                s = s[:idx-1]+[cal(s[idx-1],s[idx+1],s[idx])]+s[idx+2:]
            if len(s)==1:
                result.append(abs(s[0]))
    return max(result)
