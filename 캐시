def solution(cacheSize, cities):
    cache = []
    total_time = 0
    if cacheSize == 0:
        return 5*len(cities)
    cities_tmp = [x.lower() for x in cities]
    for city in cities_tmp:
        if city in cache:
            cache.append(cache.pop(cache.index(city)))
            total_time += 1
        else:
            if len(cache) == cacheSize:
                cache.pop(0)
            cache.append(city)
            total_time += 5
    return total_time
    
    
    
    
    
   
  
  #################  앞뒤로 pop,append할떄 collections.deque 사용하기
from collections import deque
def solution(cacheSize, cities):
    if not cacheSize:
        return len(cities)*5
    cities = [city.lower() for city in cities]
    queue = deque()
    runtime = 0
    for city in cities:
        
        if city not in queue:
            runtime += 5
            if len(queue) == cacheSize:
                queue.popleft()
                queue.append(city)
            else:
                queue.append(city)
        else:
            runtime += 1
            queue.remove(city)
            queue.append(city)
    return runtime
