def is_balance(str):
    if len(str) == 0:
        return False
    bracket_count_1 = list(str).count('(')
    bracket_count_2 = list(str).count(')')
    if bracket_count_1 == bracket_count_2:
        return True
    else:
        return False

def is_right(str):
    count = 0
    stack =list(str)
    while stack:
        poped = stack.pop()
        if poped == '(':
            count -= 1
        elif poped == ')':
            count += 1
        if count < 0:
            return False
    return True

def divide(str):
    size = len(str)//2
    for i in range(1,size+1):
        if is_balance(str[:i*2]):
            return str[:i*2], str[i*2:]

def reverse(str):
    tmp = list(str)
    for i,x in enumerate(tmp):
        if x == '(':
            tmp[i] = ')'
        else:
            tmp[i] = '('
    return ''.join(tmp)

def solution(str):
    size = len(str)
    if size == 0:
        return ""
    if is_right(str):
        return str
    u, v = divide(str)
    if is_right(u):
        return u + solution(v)
    else:
        return '(' + solution(v) + ')' + reverse(u[1:len(u) - 1])
       
       
       
       ############# 다시 풀이
       def divide(s):
    for i in range(1,len(s)//2 + 1):
        tmp = s[:i*2]
        if list(tmp).count('(')==list(tmp).count(')'):
            return s[:i*2],s[i*2:]
    return s,""
def balance(s):
    if list(s).count('(')==list(s).count(')'):
        return True
    return False
def correct(s):
    stack = list(s)
    count1 = 0
    count2 = 0
    while stack:
        cur = stack.pop(0)
        if cur == '(':
            count1+=1
        else:
            count2+=1
        if count2>count1:
            return False
    return True
def solution(string):
    if not string:
        return ""
    u,v = divide(string)
    if correct(u):
        return u+solution(v)
    else:
        tmp = ""
        for x in u[1:-1]:
            if x == ')':
                tmp+='('
            else:
                tmp+=')'
        return '('+solution(v)+')'+tmp
