import re
def make_melody(melody,time):
    regexp = re.compile('[A-Z]#?')
    tmp_m = regexp.findall(melody)
    total_melody = []
    size_melody = len(tmp_m)
    while True:
        if time <= size_melody:
            total_melody += tmp_m[:time]
            break
        else: # time > size_melody
            total_melody += tmp_m
            time = time - size_melody
    return ''.join(total_melody)
def solution(m, musicinfos):
    regexp = re.compile(':')
    regexp_2 = re.compile(',')
    infos = []
    result = []
    candid = []
    order = 1
    for musicinfo in musicinfos:
        tmp = regexp_2.split(musicinfo)
        time_1 = [int(x) for x in regexp.split(tmp[0])]
        time_2 = [int(x) for x in regexp.split(tmp[1])]
        title = tmp[2]
        melody = tmp[3]
        time = time_2[1] - time_1[1]
        if time_2[0] -  time_1[0] > 0:
            time += 60 * (time_2[0] - time_1[0])
        infos.append([time,title,melody,order])
        order += 1
    for info in infos:
        tmp = make_melody(info[2],info[0])
        candid.append([info[0],info[1],tmp,order])
    regexp = re.compile(m)
    if m[-1] == '#':
        for x in candid:
            if m in x[2]:
                result.append([x[0],x[1],x[3]])
    else: # m[-1] != '#'
        for x in candid:
            iterables = regexp.finditer(x[2])
            for iter in iterables:
                try:
                    if x[2][iter.end()] != '#':
                        result.append([x[0],x[1],x[3]])
                except:
                    result.append([x[0],x[1],x[3]])
    if len(result) == 0:
        return "(None)"
    else:
        result.sort(key = lambda x : x[2])
        result.sort(key = lambda x : x[0], reverse = True)
        return result[0][1]
